blueprint:
  name: Styrbar multiple lights (ZHA)
  description: A blueprint that allows Ikea Styrbar remote (ZHA) to control multiple lights.
  domain: automation
  input:
    controller:
      name: Controller
      description: The Styrbar remote to be used to control the lights.
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: Remote Control N2 (SYMFONISK/STYRBAR)
    light_number:
      name: Light number
      description: An input_number helper with minimum value 1 and maximum value of
        at least the amount of lights used. This input should be configured to use
        increments of 1.
      selector:
        entity:
          domain: input_number
          multiple: false
    lights:
      name: Light(s)
      description: The lights that will be controlled by the controller.
      selector:
        entity:
          domain: light
          multiple: true
  source_url: https://gist.github.com/Zuulcode/6149d9c61c8679d963aeecde02055269
variables:
  light_number: !input light_number
  lights: !input lights
mode: restart
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: !input controller
      command: "on"
    id: 'on'
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: !input controller
      command: "off"
    id: 'off'
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: !input controller
      command: "step"
      args:
        step_mode: 0  # Step down
    id: arrow_left_click
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: !input controller
      command: "step"
      args:
        step_mode: 1  # Step up
    id: arrow_right_click
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: !input controller
      command: "move"
      args:
        move_mode: 0  # Brightness up
    id: brightness_move_up
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: !input controller
      command: "move"
      args:
        move_mode: 1  # Brightness down
    id: brightness_move_down
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: !input controller
      command: "stop"
    id: brightness_stop
action:
  - choose:
      - conditions:
          - condition: trigger
            id: 'on'
        sequence:
          - service: light.turn_on
            target:
              entity_id: '{{ lights[int(states(light_number)) - 1] }}'
      - conditions:
          - condition: trigger
            id: 'off'
        sequence:
          - service: light.turn_off
            target:
              entity_id: '{{ lights[int(states(light_number)) - 1] }}'
      - conditions:
          - condition: trigger
            id: arrow_left_click
        sequence:
          - service: input_number.set_value
            data:
              value: '{% if int(states(light_number)) > 1 %} {{ int(states(light_number)) - 1 }} {% else %} {{ lights|length }} {% endif %}'
            target:
              entity_id: !input light_number
      - conditions:
          - condition: trigger
            id: arrow_right_click
        sequence:
          - service: input_number.set_value
            data:
              value: '{% if int(states(light_number)) < lights|length %} {{ int(states(light_number)) + 1 }} {% else %} 1 {% endif %}'
            target:
              entity_id: !input light_number
      - conditions:
          - condition: trigger
            id: brightness_move_up
        sequence:
          - repeat:
              until:
                - condition: trigger
                  id: brightness_stop
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: '{{ lights[int(states(light_number)) - 1] }}'
                  data:
                    brightness_step_pct: 10
                - delay:
                    milliseconds: 500
      - conditions:
          - condition: trigger
            id: brightness_move_down
        sequence:
          - repeat:
              until:
                - condition: trigger
                  id: brightness_stop
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: '{{ lights[int(states(light_number)) - 1] }}'
                  data:
                    brightness_step_pct: -10
                - delay:
                    milliseconds: 500
